<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>程序员的反抗之路</title>
  
  <subtitle>gpu cpu deeplearning 统统不会</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-24T14:01:58.057Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Jason Huang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python 下载 google 卫星影像（经纬度、瓦片）</title>
    <link href="http://example.com/2021/08/02/python%E4%B8%8B%E8%BD%BDgoogle%E5%8D%AB%E6%98%9F%E5%BD%B1%E5%83%8F%EF%BC%88%E7%BB%8F%E7%BA%AC%E5%BA%A6%E3%80%81%E7%93%A6%E7%89%87%EF%BC%89/"/>
    <id>http://example.com/2021/08/02/python%E4%B8%8B%E8%BD%BDgoogle%E5%8D%AB%E6%98%9F%E5%BD%B1%E5%83%8F%EF%BC%88%E7%BB%8F%E7%BA%AC%E5%BA%A6%E3%80%81%E7%93%A6%E7%89%87%EF%BC%89/</id>
    <published>2021-08-02T13:03:03.000Z</published>
    <updated>2021-08-24T14:01:58.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="谷歌卫星图瓦片介绍"><a href="#谷歌卫星图瓦片介绍" class="headerlink" title="谷歌卫星图瓦片介绍"></a>谷歌卫星图瓦片介绍</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://mt&#123;index&#125;.google.com/vt/lyrs=&#123;style&#125;&amp;hl=zh-CN&amp;gl=CN&amp;src=app&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参数解析</p><ul><li><p>{index}为 0 到 3，分别为谷歌的 4 个服务器，随便取一个就行~</p></li><li><p>{style}为地图的类型，比如卫星图、路线图什么的.</p><ul><li>m：路线图</li><li>t：地形图</li><li>p：带标签的地形图</li><li>s：卫星图</li><li>y：带标签的卫星图</li><li>h：标签层（路名、地名等）</li><li>其中 m 路线图和 s 卫星图是我们想要的。</li></ul></li><li><p>{x}{y}{z} 则分别是瓦片坐标的 xy 和缩放级别 z，z 取 0-22。但是我测试发现卫星图最大只能取到 20。不过即使是路线图，到 20 级也就足够用了。</p></li><li><p>gl 参数决定了卫星图是否会偏移</p><ul><li>假设不加这个参数，会按 WGS-84 来，会和路线图有偏移（因为路线图只有 GCJ-02 的版本）</li><li>加了这个参数（gl=CN）就会使卫星图也变成 GCJ-02。</li><li>也就是说，如果你使用 <a href="http://www.google.cn/maps">www.google.cn/maps</a> 或者 ditu.google.cn 来获取坐标，那么最后你还按照这个坐标进行瓦片的获取，同时加上 gl 参数即可。如果你想按照 WGS-84 来获取坐标，那么就访问国际版的谷歌地图，获取瓦片时不加 gl 参数就好了。</li></ul></li></ul><p>对于 python3，可以用 urllib.request 库进行图片的下载，然后用 PIL.Image 库（pillow）进行图片的合并。</p><h2 id="下载关键代码"><a href="#下载关键代码" class="headerlink" title="下载关键代码"></a>下载关键代码</h2><p>伪墨卡托与经纬度互转</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#------------------wgs84与web墨卡托互转-------------------------</span><br><span class="line"></span><br><span class="line"># WGS-84经纬度转Web墨卡托</span><br><span class="line">def wgs_to_macator(x, y):</span><br><span class="line">    y = 85.0511287798 if y &gt; 85.0511287798 else y</span><br><span class="line">    y = -85.0511287798 if y &lt; -85.0511287798 else y</span><br><span class="line"></span><br><span class="line">    x2 = x * 20037508.34 / 180</span><br><span class="line">    y2 = log(tan((90 + y) * pi / 360)) / (pi / 180)</span><br><span class="line">    y2 = y2 * 20037508.34 / 180</span><br><span class="line">    return x2, y2</span><br><span class="line"></span><br><span class="line"># Web墨卡托转经纬度</span><br><span class="line">def mecator_to_wgs(x, y):</span><br><span class="line">    x2 = x / 20037508.34 * 180</span><br><span class="line">    y2 = y / 20037508.34 * 180</span><br><span class="line">    y2 = 180 / pi * (2 * atan(exp(y2 * pi / 180)) - pi / 2)</span><br><span class="line">    return x2, y2</span><br><span class="line"></span><br><span class="line">#-------------------------------------------------------------</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据经纬度计算瓦片位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 根据WGS-84 的经纬度获取谷歌地图中的瓦片坐标</span><br><span class="line">def wgs84_to_tile(j, w, z):</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    Get google-style tile cooridinate from geographical coordinate</span><br><span class="line">    j : Longittude</span><br><span class="line">    w : Latitude</span><br><span class="line">    z : zoom</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    isnum = lambda x: isinstance(x, int) or isinstance(x, float)</span><br><span class="line">    if not(isnum(j) and isnum(w)):</span><br><span class="line">        raise TypeError(&quot;j and w must be int or float!&quot;)</span><br><span class="line"></span><br><span class="line">    if not isinstance(z, int) or z &lt; 0 or z &gt; 22:</span><br><span class="line">        raise TypeError(&quot;z must be int and between 0 to 22.&quot;)</span><br><span class="line"></span><br><span class="line">    if j &lt; 0:</span><br><span class="line">        j = 180 + j</span><br><span class="line">    else:</span><br><span class="line">        j += 180</span><br><span class="line">    j /= 360  # make j to (0,1)</span><br><span class="line"></span><br><span class="line">    w = 85.0511287798 if w &gt; 85.0511287798 else w</span><br><span class="line">    w = -85.0511287798 if w &lt; -85.0511287798 else w</span><br><span class="line">    w = log(tan((90 + w) * pi / 360)) / (pi / 180)</span><br><span class="line">    w /= 180  # make w to (-1,1)</span><br><span class="line">    w = 1 - (w + 1) / 2  # make w to (0,1) and left top is 0-point</span><br><span class="line"></span><br><span class="line">    num = 2**z</span><br><span class="line">    x = floor(j * num)</span><br><span class="line">    y = floor(w * num)</span><br><span class="line">    return x, y</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经纬度度分秒与小数互转</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">def dms2dd(degrees, minutes, seconds, direction):</span><br><span class="line"></span><br><span class="line">    dd = float(degrees) + float(minutes)/60 + float(seconds)/(60*60);</span><br><span class="line"></span><br><span class="line">    if direction == &#x27;E&#x27; or direction == &#x27;N&#x27;:</span><br><span class="line"></span><br><span class="line">        dd *= -1</span><br><span class="line"></span><br><span class="line">    return dd;</span><br><span class="line"></span><br><span class="line">def dd2dms(deg):</span><br><span class="line"></span><br><span class="line">    d = int(deg)</span><br><span class="line"></span><br><span class="line">    md = abs(deg - d) * 60</span><br><span class="line"></span><br><span class="line">    m = int(md)</span><br><span class="line"></span><br><span class="line">    sd = (md - m) * 60</span><br><span class="line"></span><br><span class="line">    return [d, m, sd]</span><br><span class="line"></span><br><span class="line">def parse_dms(dms):</span><br><span class="line"></span><br><span class="line">    parts = re.split(&#x27;[^\d\w]+&#x27;, dms)</span><br><span class="line"></span><br><span class="line">    lat = dms2dd(parts[0], parts[1], parts[2], parts[3])</span><br><span class="line"></span><br><span class="line">    return (lat)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下载器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">class Downloader(Thread):</span><br><span class="line">    # multiple threads downloader</span><br><span class="line">    def __init__(self,index,count,urls,datas,update):</span><br><span class="line">        # index 表示第几个线程，count 表示线程的总数，urls 代表需要下载url列表，datas代表要返回的数据列表。</span><br><span class="line">        # update 表示每下载一个成功就进行的回调函数。</span><br><span class="line">        super().__init__()</span><br><span class="line">        self.urls=urls</span><br><span class="line">        self.datas=datas</span><br><span class="line">        self.index=index</span><br><span class="line">        self.count=count</span><br><span class="line">        self.update=update</span><br><span class="line"></span><br><span class="line">    def download(self,url):</span><br><span class="line">        HEADERS = &#123;&#x27;User-Agent&#x27;: random.choice(agents)&#125;</span><br><span class="line">        # print(url)</span><br><span class="line"></span><br><span class="line">        err=0</span><br><span class="line">        while(err&lt;4):</span><br><span class="line">            full_url = url.replace(&#x27;_index_&#x27;,str(err))  # 如果下载失败，则切换服务器</span><br><span class="line">            header = ur.Request(full_url,headers=HEADERS)</span><br><span class="line">            try:</span><br><span class="line">                data = ur.urlopen(header).read()</span><br><span class="line">            except:</span><br><span class="line">                err+=1</span><br><span class="line">            else:</span><br><span class="line">                return data</span><br><span class="line">        # raise Exception(&quot;Bad network link.&quot;)</span><br><span class="line">        print(&quot;Bad network link.&quot;,url)</span><br><span class="line"></span><br><span class="line">    def run(self):</span><br><span class="line">        for i,url in enumerate(self.urls):</span><br><span class="line">            if i%self.count != self.index:</span><br><span class="line">                continue</span><br><span class="line">            self.datas[i]=self.download(url)</span><br><span class="line">            if mutex.acquire():</span><br><span class="line">                self.update()</span><br><span class="line">                mutex.release()</span><br></pre></td></tr></table></figure><p><a href="https://github.com/myBestLove/googleMapDownloader">完整代码</a></p><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p><a href="https://blog.csdn.net/mygisforum/article/details/22997879">https://blog.csdn.net/mygisforum/article/details/22997879</a><br><a href="https://www.cnblogs.com/modyuan/p/12293843.html">https://www.cnblogs.com/modyuan/p/12293843.html</a><br><a href="https://blog.csdn.net/u012866178/article/details/83188581">https://blog.csdn.net/u012866178/article/details/83188581</a><br><a href="https://www.cnblogs.com/jyughynj/p/pythonGetMapTile.html">https://www.cnblogs.com/jyughynj/p/pythonGetMapTile.html</a><br><a href="https://www.cnblogs.com/xinwenpeng/p/9818953.html">https://www.cnblogs.com/xinwenpeng/p/9818953.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;谷歌卫星图瓦片介绍&quot;&gt;&lt;a href=&quot;#谷歌卫星图瓦片介绍&quot; class=&quot;headerlink&quot; title=&quot;谷歌卫星图瓦片介绍&quot;&gt;&lt;/a&gt;谷歌卫星图瓦片介绍&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    <category term="遥感" scheme="http://example.com/categories/%E9%81%A5%E6%84%9F/"/>
    
    
    <category term="google map" scheme="http://example.com/tags/google-map/"/>
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>win下部署tensorrt</title>
    <link href="http://example.com/2021/07/31/win%E4%B8%8B%E9%83%A8%E7%BD%B2tensorrt/"/>
    <id>http://example.com/2021/07/31/win%E4%B8%8B%E9%83%A8%E7%BD%B2tensorrt/</id>
    <published>2021-07-31T14:11:00.000Z</published>
    <updated>2021-08-24T13:55:52.661Z</updated>
    
    <content type="html"><![CDATA[<p>现有的tensorrt正式发行版能够在win7和win10上部署，如果想要在win7上使用tensorrt高版本就不用管是win10还是什么的，只要cuda和cudnn环境配对就可以部署使用。<br>本文部署的环境是win7+cuda10.2+cudnn8.1+tensorrt7.234</p><hr><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>使用</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现有的tensorrt正式发行版能够在win7和win10上部署，如果想要在win7上使用tensorrt高版本就不用管是win10还是什么的，只要cuda和cudnn环境配对就可以部署使用。&lt;br&gt;本文部署的环境是win7+cuda10.2+cudnn8.1+tensor</summary>
      
    
    
    
    <category term="落地" scheme="http://example.com/categories/%E8%90%BD%E5%9C%B0/"/>
    
    
    <category term="tensorrt" scheme="http://example.com/tags/tensorrt/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/07/27/hello-world/"/>
    <id>http://example.com/2021/07/27/hello-world/</id>
    <published>2021-07-27T14:57:32.080Z</published>
    <updated>2021-08-24T13:55:18.335Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
